# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo:pedro
    container_name: mongo_db
    env_file:
      - .env
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ADMIN_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - '27017:27017'
    volumes:
      - ./mongoDB/mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - data_mongo:/data/db
    networks:
      - api-network

  mongo-express:
    image: mongo-express
    container_name: mongo_frontend
    depends_on:
      - mongo
    env_file:
      - .env
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_ADMIN_USERNAME}:${MONGODB_ADMIN_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${BASICAUTH_PASSWORD}
    networks:
      - api-network

  uvicorn:
    image: uvicorn:pedro
    container_name: uvicorn_server
    ports:
      - '8080:8080'
    environment:
      MONGO_URL: mongodb://${MONGODB_ADMIN_USERNAME}:${MONGODB_ADMIN_PASSWORD}@mongo:27017/
      DB_NAME: ${MONGO_DATABASE}
    networks:
      - api-network
    volumes:
      - data_uvicorn:/app

volumes:
  data_mongo:
    driver: local
  data_uvicorn:
    driver: local

networks:
  api-network:
    driver: bridge